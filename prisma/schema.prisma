generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model HomeResources {
  id     Int     @id @default(autoincrement())
  title  String
  url    String?
  module String  @default("home")

  @@map("home_resources")
}

model Users {
  id           Int            @id @default(autoincrement())
  username     String         @unique
  password     String
  name         String
  phone        String?
  createdAt    DateTime       @default(now())
  updateAt     DateTime       @updatedAt
  status       String?        @default("actived")
  substituteId Int?           @unique
  phones       BigInt?
  role         Role[]
  moive        UserOnOmovie[]
  substitute   Users?         @relation("userSubstitute", fields: [substituteId], references: [id])
  master       Users?         @relation("userSubstitute")

  @@map("users")
}

model Movie {
  id        Int            @id @default(autoincrement())
  movieName String
  role      Role[]
  user      UserOnOmovie[]
  awards    awards?

  @@map("movies")
}

model UserOnOmovie {
  id      Int    @id @default(autoincrement())
  usersId Int?
  movieId Int?
  Movie   Movie? @relation(fields: [movieId], references: [id])
  Users   Users? @relation(fields: [usersId], references: [id])
}

model Role {
  id      Int    @id @default(autoincrement())
  name    String
  userId  Int?
  movieId Int
  Movie   Movie  @relation(fields: [movieId], references: [id])
  users   Users? @relation(fields: [userId], references: [id])
}

model awards {
  id      Int    @id @default(autoincrement())
  movieId Int    @unique
  name    String
  movie   Movie  @relation(fields: [movieId], references: [id])
}

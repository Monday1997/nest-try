// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 写完会格式化 没有格式化说明安装prisma插件
model HomeResources {
  id     Int     @id @default(autoincrement())
  title  String
  url    String? //问号即可选
  module String  @default("home")

  @@map("home_resources")
}

model Users {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  password     String
  name         String
  phone        String?
  status       String?  @default("actived")
  // status phome email ....
  createdAt    DateTime @default(now())
  updateAt     DateTime @updatedAt
  role         Role[]
  substituteId Int?     @unique
  substitute   Users?   @relation("userSubstitute", fields: [substituteId], references: [id])
  master       Users?   @relation("userSubstitute")

  @@map("users")
}

model Movie {
  id        Int     @id @default(autoincrement())
  movieName String
  awards    awards?
  role      Role[]

  @@map("movies")
}

// 演员角色此处一对多 
model Role {
  id      Int    @id @default(autoincrement())
  name    String
  users   Users? @relation(fields: [userId], references: [id])
  userId  Int?
  Movie   Movie  @relation(fields: [movieId], references: [id])
  movieId Int
}

// 让奖项和电影一对一
model awards {
  id      Int    @id @default(autoincrement())
  movie   Movie? @relation(fields: [movieId], references: [id])
  movieId Int    @unique
  name    String
}
